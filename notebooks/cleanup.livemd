# Cleaning up after testing various API calls

```elixir
Mix.install([
  {:openai_ex, "~> 0.8.3"},
  {:kino, "~> 0.13.2"}
])
```

## Files cleanup

```elixir
apikey = System.fetch_env!("LB_OPENAI_API_KEY")
openai = OpenaiEx.new(apikey)
```

```elixir
all_files = openai |> OpenaiEx.Files.list!()
```

```elixir
Enum.each(all_files["data"], fn file -> OpenaiEx.Files.delete!(openai, file["id"]) end)
```

```elixir
OpenaiEx.Files.list!(openai)
```

## Assistants cleanup

```elixir
all_assistants = OpenaiEx.Beta.Assistants.list!(openai)
```

```elixir
Enum.each(all_assistants["data"], fn a -> OpenaiEx.Beta.Assistants.delete!(openai, a["id"]) end)
```

```elixir
OpenaiEx.Beta.Assistants.list!(openai)
```

## Vector Stores cleanup

```elixir
(openai |> OpenaiEx.Beta.VectorStores.list!())["data"]
|> Enum.each(fn vs -> openai |> OpenaiEx.Beta.VectorStores.delete!(vs["id"]) end)
```

```elixir
openai |> OpenaiEx.Beta.VectorStores.list!()
```

<!-- livebook:{"offset":945,"stamp":{"token":"XCP.UtkySz4q0ZIjbnxKHDFEd4RRZfKookRU6K5xUhFPwPoBvBaeShIDfRpYIrWtZhw8qTwjpZ9L4Ic64MM5uwVQxm5AvLrs0LmWat_UkjEnWUudx7Zcy3HoLPE","version":2}} -->
